---
- name: create namespace
  openshift_v1_project:
    name: '{{ project_name }}'

- name: create persistent volume claim
  k8s_v1_persistent_volume_claim:
    name: keystore
    namespace: '{{ project_name }}'
    state: present
    access_modes:
      - ReadWriteOnce
    resources_requests:
      storage: 5Gi

- name: create Ethereum service
  k8s_v1_service:
    name: ethereum
    namespace: '{{ project_name }}'
    state: present
    selector:
      app: '{{ project_name }}'
    ports:
      - name: ethereum-8545
        port: 8545
        target_port: 8545
        protocol: TCP
      - name: ethereum-30303
        port: 30303
        target_port: 30303
        protocol: TCP

- name: create Ethereum route
  openshift_v1_route:
    name: ethereum
    namespace: '{{ project_name }}'
    spec_port_target_port: ethereum-8545
    labels:
      app: '{{ project_name }}'
      service: ethereum
    to_name: ethereum
    state: present
  register: route

- name: create Ethereum deployment config
  openshift_v1_deployment_config:
    name: ethereum
    namespace: '{{ project_name }}'
    state: present
    labels:
      app: '{{ project_name }}'
      service: ethereum
    replicas: '{{ replicas }}'
    selector:
      app: '{{ project_name }}'
      service: ethereum
    spec_template_metadata_labels:
      app: '{{ project_name }}'
      service: ethereum
    containers:
    - command:
      - /usr/local/bin/geth
      - --fast
      - --cache=512
      - --rpc
      - --rpcaddr=0.0.0.0
      - "{{ '--mine' if mine else '' }}"
      - "{{ '--etherbase=' if etherbase else '' }}{{ etherbase if etherbase else '' }}"
      - "{{ '--testnet' if test_network else '' }}"
      image: "docker.io/ethereum/client-go"
      name: ethereum
      strategy_type: Rolling
      ports:
        - container_port: 8545
          name: ethereum-8545
          protocol: TCP
        - container_port: 30303
          name: ethereum-30303
          protocol: TCP
      volume_munts:
      - mount_path: /home/apb/.ethereum
        name: keystore
      working_dir: /
    restart_policy: Always
